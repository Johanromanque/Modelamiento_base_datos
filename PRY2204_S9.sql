/* =======================================================
   CASO: CRISTALERÍA ANDINA S.A. 
   ======================================================= */

/* ================================
  — LIMPIEZA CONTROLADA
   ================================ */
DROP TABLE asignacion_turno CASCADE CONSTRAINTS;
DROP TABLE orden_mantencion CASCADE CONSTRAINTS;
DROP TABLE rol_turno CASCADE CONSTRAINTS;
DROP TABLE turno CASCADE CONSTRAINTS;
DROP TABLE tecnico_mantencion CASCADE CONSTRAINTS;
DROP TABLE especialidad_tecnica CASCADE CONSTRAINTS;
DROP TABLE operario CASCADE CONSTRAINTS;
DROP TABLE categoria_proceso CASCADE CONSTRAINTS;
DROP TABLE jefe_turno CASCADE CONSTRAINTS;
DROP TABLE empleado CASCADE CONSTRAINTS;
DROP TABLE salud CASCADE CONSTRAINTS;
DROP TABLE afp CASCADE CONSTRAINTS;
DROP TABLE maquina CASCADE CONSTRAINTS;
DROP TABLE tipo_maquina CASCADE CONSTRAINTS;
DROP TABLE planta CASCADE CONSTRAINTS;
DROP TABLE comuna CASCADE CONSTRAINTS;
DROP TABLE region CASCADE CONSTRAINTS;


/* ================================
   — TERRITORIO
   ================================ */
CREATE TABLE region (
  id_region        NUMBER(4)    NOT NULL,
  nombre_region    VARCHAR2(80) NOT NULL,
  CONSTRAINT pk_region PRIMARY KEY (id_region),
  CONSTRAINT unq_region_nombre UNIQUE (nombre_region)
);

CREATE SEQUENCE seq_region
  START WITH 21 INCREMENT BY 1 NOCACHE;

CREATE TABLE comuna (
  id_comuna      NUMBER(6) GENERATED BY DEFAULT AS IDENTITY
                 (START WITH 1050 INCREMENT BY 5) NOT NULL,
  nombre_comuna  VARCHAR2(80)  NOT NULL,
  region_id      NUMBER(4)     NOT NULL,
  CONSTRAINT pk_comuna PRIMARY KEY (id_comuna),
  CONSTRAINT fk_comuna_region FOREIGN KEY (region_id)
    REFERENCES region(id_region)
);

CREATE TABLE planta (
  id_planta       NUMBER(6)      NOT NULL,
  nombre_planta   VARCHAR2(100)  NOT NULL,
  direccion       VARCHAR2(150)  NOT NULL,
  comuna_id       NUMBER(6)      NOT NULL,
  CONSTRAINT pk_planta PRIMARY KEY (id_planta),
  CONSTRAINT fk_planta_comuna FOREIGN KEY (comuna_id)
    REFERENCES comuna(id_comuna)
);

/* ================================
   2) MÁQUINAS
   ================================ */
CREATE TABLE tipo_maquina (
  id_tipo_maquina  NUMBER(6)      PRIMARY KEY,
  nombre           VARCHAR2(100)  NOT NULL,
  descripcion      VARCHAR2(4000)
);

CREATE TABLE maquina (
  id_planta        NUMBER(6)      NOT NULL,
  nro_maquina      NUMBER(6)      NOT NULL,
  nombre           VARCHAR2(100)  NOT NULL,
  estado_activo    CHAR(1) DEFAULT 'S' NOT NULL,
  id_tipo_maquina  NUMBER(6)      NOT NULL,
  CONSTRAINT pk_maquina PRIMARY KEY (id_planta, nro_maquina),
  CONSTRAINT fk_maquina_planta FOREIGN KEY (id_planta)
    REFERENCES planta(id_planta),
  CONSTRAINT fk_maquina_tipo FOREIGN KEY (id_tipo_maquina)
    REFERENCES tipo_maquina(id_tipo_maquina),
  CONSTRAINT ck_maquina_estado CHECK (estado_activo IN ('S','N'))
);

/* ================================
   3) TABLAS DE APOYO PERSONAS
   ================================ */
CREATE TABLE afp (
  id_afp     NUMBER(4)     PRIMARY KEY,
  nombre     VARCHAR2(80)  NOT NULL,
  CONSTRAINT unq_afp_nombre UNIQUE (nombre)
);

CREATE TABLE salud (
  id_salud   NUMBER(4)     PRIMARY KEY,
  nombre     VARCHAR2(80)  NOT NULL,
  CONSTRAINT unq_salud_nombre UNIQUE (nombre)
);

/* ================================
   4) EMPLEADOS (SUPERCLASE)
   ================================ */
CREATE TABLE empleado (
  id_empleado         NUMBER(10)   PRIMARY KEY,
  rut                 VARCHAR2(12) NOT NULL,
  nombres             VARCHAR2(80) NOT NULL,
  apellidos           VARCHAR2(80) NOT NULL,
  fecha_contratacion  DATE         NOT NULL,
  sueldo_base         NUMBER(12,2) NOT NULL,
  estado_activo       CHAR(1) DEFAULT 'S' NOT NULL,
  id_planta           NUMBER(6)    NOT NULL,
  id_afp              NUMBER(4)    NOT NULL,
  id_salud            NUMBER(4)    NOT NULL,
  id_jefe_directo     NUMBER(10),
  CONSTRAINT unq_empleado_rut UNIQUE (rut),
  CONSTRAINT fk_emp_planta FOREIGN KEY (id_planta) REFERENCES planta(id_planta),
  CONSTRAINT fk_emp_afp    FOREIGN KEY (id_afp)    REFERENCES afp(id_afp),
  CONSTRAINT fk_emp_salud  FOREIGN KEY (id_salud)  REFERENCES salud(id_salud),
  CONSTRAINT fk_emp_jefe   FOREIGN KEY (id_jefe_directo) REFERENCES empleado(id_empleado),
  CONSTRAINT ck_emp_estado CHECK (estado_activo IN ('S','N'))
);

/* ================================
   5) SUBCLASES DE EMPLEADO
   ================================ */
CREATE TABLE jefe_turno (
  id_empleado            NUMBER(10)   PRIMARY KEY,
  area_responsabilidad   VARCHAR2(100) NOT NULL,
  max_operarios_turno    NUMBER(4)     NOT NULL,
  CONSTRAINT fk_jt_emp FOREIGN KEY (id_empleado) REFERENCES empleado(id_empleado)
);

CREATE TABLE categoria_proceso (
  id_categoria  NUMBER(4)     PRIMARY KEY,
  nombre        VARCHAR2(40)  NOT NULL,
  CONSTRAINT unq_categoria_nombre UNIQUE (nombre)
);

CREATE TABLE operario (
  id_empleado        NUMBER(10)  PRIMARY KEY,
  id_categoria       NUMBER(4)   NOT NULL,
  certificacion      VARCHAR2(120),
  horas_std_turno    NUMBER(4,1) DEFAULT 8 NOT NULL,
  CONSTRAINT fk_op_emp  FOREIGN KEY (id_empleado) REFERENCES empleado(id_empleado),
  CONSTRAINT fk_op_cat  FOREIGN KEY (id_categoria) REFERENCES categoria_proceso(id_categoria),
  CONSTRAINT ck_op_horas CHECK (horas_std_turno > 0 AND horas_std_turno <= 24)
);

CREATE TABLE especialidad_tecnica (
  id_especialidad NUMBER(4)    PRIMARY KEY,
  nombre          VARCHAR2(60) NOT NULL,
  CONSTRAINT unq_especialidad_nombre UNIQUE (nombre)
);

CREATE TABLE tecnico_mantencion (
  id_empleado               NUMBER(10) PRIMARY KEY,
  id_especialidad           NUMBER(4)  NOT NULL,
  nivel_certificacion       VARCHAR2(60),
  tiempo_respuesta_std_min  NUMBER(5)  NOT NULL,
  CONSTRAINT fk_tm_emp FOREIGN KEY (id_empleado) REFERENCES empleado(id_empleado),
  CONSTRAINT fk_tm_esp FOREIGN KEY (id_especialidad) REFERENCES especialidad_tecnica(id_especialidad),
  CONSTRAINT ck_tm_tiempo CHECK (tiempo_respuesta_std_min > 0)
);

/* ================================
   6) OPERACIÓN: TURNOS, ROLES, ASIGNACIONES
   ================================ */
CREATE TABLE turno (
  id_turno       VARCHAR2(10)  NOT NULL,      -- p.ej. M0715, T1523, N2307
  nombre_turno   VARCHAR2(40)  NOT NULL,      -- Mañana, Tarde, Noche
  hora_inicio    CHAR(5)       NOT NULL,      -- HH:MM
  hora_fin       CHAR(5)       NOT NULL,      -- HH:MM
  CONSTRAINT pk_turno PRIMARY KEY (id_turno),
  CONSTRAINT unq_turno_nombre UNIQUE (nombre_turno),
  CONSTRAINT ck_turno_hora_ini CHECK (REGEXP_LIKE(hora_inicio, '^(?:[01]\d|2[0-3]):[0-5]\d$')),
  CONSTRAINT ck_turno_hora_fin CHECK (REGEXP_LIKE(hora_fin, '^(?:[01]\d|2[0-3]):[0-5]\d$'))
);

CREATE TABLE rol_turno (
  id_rol   NUMBER(4)    PRIMARY KEY,
  nombre   VARCHAR2(60) NOT NULL,
  CONSTRAINT unq_rol_nombre UNIQUE (nombre)
);

CREATE TABLE asignacion_turno (
  id_asignacion  NUMBER(12)   PRIMARY KEY,
  fecha          DATE         NOT NULL,
  id_empleado    NUMBER(10)   NOT NULL,
  id_turno       VARCHAR2(10) NOT NULL,
  id_planta      NUMBER(6)    NOT NULL,
  nro_maquina    NUMBER(6)    NOT NULL,
  id_rol         NUMBER(4),
  CONSTRAINT fk_asg_emp   FOREIGN KEY (id_empleado) REFERENCES empleado(id_empleado),
  CONSTRAINT fk_asg_turno FOREIGN KEY (id_turno)    REFERENCES turno(id_turno),
  CONSTRAINT fk_asg_maq   FOREIGN KEY (id_planta, nro_maquina) REFERENCES maquina(id_planta, nro_maquina),
  CONSTRAINT fk_asg_rol   FOREIGN KEY (id_rol)      REFERENCES rol_turno(id_rol),
  CONSTRAINT unq_asg_empleado_fecha UNIQUE (id_empleado, fecha)  -- 1 turno/día por empleado
);

/* ================================
   7) MANTENCIÓN
   ================================ */
CREATE TABLE orden_mantencion (
  id_orden         NUMBER(12)   PRIMARY KEY,
  id_planta        NUMBER(6)    NOT NULL,
  nro_maquina      NUMBER(6)    NOT NULL,
  id_tecnico       NUMBER(10)   NOT NULL,
  fecha_programada DATE         NOT NULL,
  fecha_ejecucion  DATE,
  descripcion      VARCHAR2(2000) NOT NULL,
  CONSTRAINT fk_ord_maq FOREIGN KEY (id_planta, nro_maquina)
    REFERENCES maquina(id_planta, nro_maquina),
  CONSTRAINT fk_ord_tec FOREIGN KEY (id_tecnico)
    REFERENCES tecnico_mantencion(id_empleado),
  CONSTRAINT ck_ord_fechas CHECK (fecha_ejecucion IS NULL OR fecha_ejecucion >= fecha_programada)
);

/* ================================
   FASE 3 — DML (solo REGION, COMUNA, PLANTA, TURNO)
   ================================ */

-- REGION (ids con secuencia: 21, 22)
INSERT INTO region (id_region, nombre_region)
VALUES (seq_region.NEXTVAL, 'Región de Valparaíso');

INSERT INTO region (id_region, nombre_region)
VALUES (seq_region.NEXTVAL, 'Región Metropolitana');

-- COMUNA (identity: 1050, 1055, …)
INSERT INTO comuna (nombre_comuna, region_id)
VALUES ('Quilpué', 21);

INSERT INTO comuna (nombre_comuna, region_id)
VALUES ('Maipú', 22);

-- PLANTA (usas los ids de comuna generados arriba: 1050 y 1055)
INSERT INTO planta (id_planta, nombre_planta, direccion, comuna_id)
VALUES (45, 'Planta Oriente', 'Camino Industrial 1234', 1050);

INSERT INTO planta (id_planta, nombre_planta, direccion, comuna_id)
VALUES (46, 'Planta Costa', 'Av. Vidrieras 890', 1055);

-- TURNO
INSERT INTO turno (id_turno, nombre_turno, hora_inicio, hora_fin)
VALUES ('M0715', 'Mañana', '07:00', '15:00');

INSERT INTO turno (id_turno, nombre_turno, hora_inicio, hora_fin)
VALUES ('N2307', 'Noche', '23:00', '07:00');

INSERT INTO turno (id_turno, nombre_turno, hora_inicio, hora_fin)
VALUES ('T1523', 'Tarde',  '15:00', '23:00');

COMMIT;

/* ================================
   VERIFICACIONES RÁPIDAS
   ================================ */
SELECT * FROM region ORDER BY id_region;
SELECT * FROM comuna ORDER BY id_comuna;
SELECT * FROM planta ORDER BY id_planta;
SELECT * FROM turno  ORDER BY id_turno;

/* ================================
   INFORME 1
   ================================ */
SELECT
  id_turno || ' - ' || nombre_turno AS TURNO,
  hora_inicio AS ENTRADA,
  hora_fin    AS SALIDA
FROM turno
WHERE hora_inicio > '20:00'
ORDER BY hora_inicio DESC;

/* ================================
   INFORME 2
   ================================ */
SELECT
  nombre_turno || ' (' || id_turno || ')' AS TURNO,
  hora_inicio AS ENTRADA,
  hora_fin    AS SALIDA
FROM turno
WHERE hora_inicio BETWEEN '06:00' AND '14:59'
ORDER BY hora_inicio ASC;