-- ===========================================================
-- MiniMarket "Doña Marta"
-- Limpieza de tablas y sequels
-- ===========================================================

DROP TABLE REGION CASCADE CONSTRAINTS;
DROP TABLE COMUNA CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE MARCA CASCADE CONSTRAINTS;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE AFP CASCADE CONSTRAINTS;
DROP TABLE SALUD CASCADE CONSTRAINTS;
DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE VENDEDOR CASCADE CONSTRAINTS;
DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS;
DROP TABLE VENTA CASCADE CONSTRAINTS;
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS;

DROP SEQUENCE SEQ_SALUD;
DROP SEQUENCE SEQ_EMPLEADO;


--------------------------------------------------------------------------------
-- Caso 1: IMPLEMENTACIÓN DEL MODELO
-- Creación de tablas del minimarket
-- Jerarquía de dependencia: Tablas fuertes -> Tablas débiles
-- Incluye PK, FK, UNIQUE y CHECK con nombres representativos
--------------------------------------------------------------------------------


CREATE TABLE REGION (
    id_region NUMBER(4) CONSTRAINT REGION_PK PRIMARY KEY,
    nom_region VARCHAR2(255) NOT NULL
);

CREATE TABLE COMUNA (
    id_comuna NUMBER(4) CONSTRAINT COMUNA_PK PRIMARY KEY,
    nom_comuna VARCHAR2(100) NOT NULL,
    cod_region NUMBER(4) NOT NULL,
    CONSTRAINT COMUNA_FK_REGION FOREIGN KEY (cod_region) REFERENCES REGION(id_region)
);


CREATE TABLE PROVEEDOR (
    id_proveedor NUMBER(5) CONSTRAINT PROVEEDOR_PK PRIMARY KEY,
    nombre_proveedor VARCHAR2(150) NOT NULL,
    rut_proveedor VARCHAR2(10),
    telefono VARCHAR2(10),
    email VARCHAR2(200),
    direccion VARCHAR2(200),
    cod_comuna NUMBER(4),
    CONSTRAINT PROVEEDOR_FK_COMUNA FOREIGN KEY (cod_comuna) REFERENCES COMUNA(id_comuna)
);


CREATE TABLE MARCA (
    id_marca NUMBER(3) CONSTRAINT MARCA_PK PRIMARY KEY,
    nombre_marca VARCHAR2(25) NOT NULL
);

CREATE TABLE CATEGORIA (
    id_categoria NUMBER(3) CONSTRAINT CATEGORIA_PK PRIMARY KEY,
    nombre_categoria VARCHAR2(255) NOT NULL
);

CREATE TABLE PRODUCTO (
    id_producto NUMBER(4) CONSTRAINT PRODUCTO_PK PRIMARY KEY,
    nombre_producto VARCHAR2(100) NOT NULL,
    precio_unitario NUMBER(10,2) NOT NULL,
    origen_nacional CHAR(1) NOT NULL,
    stock_minimo NUMBER(3) NOT NULL,
    activo CHAR(1) DEFAULT 'S' NOT NULL,
    cod_marca NUMBER(3),
    cod_categoria NUMBER(3),
    cod_proveedor NUMBER(5),
    CONSTRAINT PRODUCTO_FK_MARCA FOREIGN KEY (cod_marca) REFERENCES MARCA(id_marca),
    CONSTRAINT PRODUCTO_FK_CATEGORIA FOREIGN KEY (cod_categoria) REFERENCES CATEGORIA(id_categoria),
    CONSTRAINT PRODUCTO_FK_PROVEEDOR FOREIGN KEY (cod_proveedor) REFERENCES PROVEEDOR(id_proveedor)
);


CREATE TABLE AFP (
    id_afp NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 210 INCREMENT BY 6) CONSTRAINT AFP_PK PRIMARY KEY,
    nom_afp VARCHAR2(255) NOT NULL
);


CREATE TABLE SALUD (
    id_salud NUMBER(4) CONSTRAINT SALUD_PK PRIMARY KEY,
    nom_salud VARCHAR2(40) NOT NULL
);


CREATE TABLE MEDIO_PAGO (
    id_mpago NUMBER(3) CONSTRAINT MEDIO_PAGO_PK PRIMARY KEY,
    nombre_mpago VARCHAR2(50) NOT NULL
);


CREATE TABLE EMPLEADO (
    id_empleado NUMBER(4) CONSTRAINT EMPLEADO_PK PRIMARY KEY,
    rut_empleado VARCHAR2(10)NOT NULL,
    nombre_empleado VARCHAR2(25) NOT NULL,
    apellido_paterno VARCHAR2(25)NOT NULL,
    apellido_materno VARCHAR2(25) NOT NULL,
    fecha_contratacion DATE NOT NULL,
    sueldo_base NUMBER(10,2) NOT NULL,
    bono_jefatura NUMBER(10,2),
    activo CHAR(1) DEFAULT 'S' NOT NULL,
    tipo_empleado VARCHAR2(25) NOT NULL,
    cod_empleado NUMBER(4),
    cod_salud NUMBER(4),
    cod_afp NUMBER(5),
    CONSTRAINT EMPLEADO_FK_SALUD FOREIGN KEY (cod_salud) REFERENCES SALUD(id_salud),
    CONSTRAINT EMPLEADO_FK_AFP FOREIGN KEY (cod_afp) REFERENCES AFP(id_afp)
);


CREATE TABLE VENDEDOR (
    id_empleado NUMBER(4) CONSTRAINT VENDEDOR_PK PRIMARY KEY,
    comision_venta NUMBER(5,2) NOT NULL,
    CONSTRAINT VENDEDOR_FK_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado)
);

CREATE TABLE ADMINISTRATIVO (
    id_empleado NUMBER(4) CONSTRAINT ADMINISTRATIVO_PK PRIMARY KEY,
    CONSTRAINT ADMINISTRATIVO_FK_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado)
);


CREATE TABLE VENTA (
    id_venta NUMBER(6) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 5050 INCREMENT BY 3) CONSTRAINT VENTA_PK PRIMARY KEY,
    fecha_venta DATE NOT NULL,
    total_venta NUMBER(12,2) NOT NULL,
    cod_mpago NUMBER(3),
    cod_empleado NUMBER(4),
    CONSTRAINT VENTA_FK_MEDIO_PAGO FOREIGN KEY (cod_mpago) REFERENCES MEDIO_PAGO(id_mpago),
    CONSTRAINT VENTA_FK_EMPLEADO FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO(id_empleado)
);

CREATE TABLE DETALLE_VENTA (
    cod_venta NUMBER(6),
    cod_producto NUMBER(4),
    cantidad NUMBER(6) NOT NULL,
    precio_unitario NUMBER(12,2),
    CONSTRAINT DETALLE_VENTA_PK PRIMARY KEY (cod_venta, cod_producto),
    CONSTRAINT DET_VENTA_FK_VENTA FOREIGN KEY (cod_venta) REFERENCES VENTA(id_venta),
    CONSTRAINT DET_VENTA_FK_PRODUCTO FOREIGN KEY (cod_producto) REFERENCES PRODUCTO(id_producto)
);


CREATE SEQUENCE SEQ_SALUD START WITH 2050 INCREMENT BY 10 NOCACHE NOCYCLE;


CREATE SEQUENCE SEQ_EMPLEADO START WITH 750 INCREMENT BY 3 NOCACHE NOCYCLE;

--------------------------------------------------------------------------------
--Caso 2: MODIFICACION DEL MODELO
--------------------------------------------------------------------------------

ALTER TABLE EMPLEADO
ADD CONSTRAINT EMPLEADO_CK_SUELDO_MIN CHECK (sueldo_base >= 400000);


ALTER TABLE VENDEDOR
ADD CONSTRAINT VENDEDOR_CK_COMISION CHECK (comision_venta >= 0 AND comision_venta <= 0.25);


ALTER TABLE PRODUCTO
ADD CONSTRAINT PRODUCTO_CK_STOCK_MIN CHECK (stock_minimo >= 3);


ALTER TABLE PROVEEDOR
ADD CONSTRAINT PROVEEDOR_UNQ_EMAIL UNIQUE (email);


ALTER TABLE MARCA
ADD CONSTRAINT MARCA_UNQ_NOMBRE UNIQUE (nombre_marca);


ALTER TABLE DETALLE_VENTA
ADD CONSTRAINT DETALLE_VENTA_CK_CANT CHECK (cantidad > 0);



CREATE SEQUENCE SEQ_SALUD START WITH 2050 INCREMENT BY 10 NOCACHE NOCYCLE;


CREATE SEQUENCE SEQ_EMPLEADO START WITH 750 INCREMENT BY 3 NOCACHE NOCYCLE;

--------------------------------------------------------------------------------
-- Caso 3: POBLAMIENTO DEL MODELO
--------------------------------------------------------------------------------

INSERT INTO REGION (id_region, nom_region) VALUES (1, 'Región de ejemplo');
INSERT INTO COMUNA (id_comuna, nom_comuna, cod_region) VALUES (1, 'Comuna Ejemplo', 1);


INSERT INTO PROVEEDOR (id_proveedor, nombre_proveedor, rut_proveedor, telefono, email, direccion, cod_comuna)
VALUES (10001, 'Distribuciones del Sur', '76123456-7', '612345678', 'ventas@distelsur.cl', 'Av. Principal 123', 1);

INSERT INTO PROVEEDOR (id_proveedor, nombre_proveedor, rut_proveedor, telefono, email, direccion, cod_comuna)
VALUES (10002, 'Alimentos Norte', '77987654-3', '612345679', 'contacto@alimentosnorte.cl', 'Calle Falsa 456', 1);


INSERT INTO MARCA (id_marca, nombre_marca) VALUES (1, 'MarcaA');
INSERT INTO MARCA (id_marca, nombre_marca) VALUES (2, 'MarcaB');

INSERT INTO CATEGORIA (id_categoria, nombre_categoria) VALUES (1, 'Abarrotes');
INSERT INTO CATEGORIA (id_categoria, nombre_categoria) VALUES (2, 'Lacteos');


INSERT INTO PRODUCTO (id_producto, nombre_producto, precio_unitario, origen_nacional, stock_minimo, activo, cod_marca, cod_categoria, cod_proveedor)
VALUES (100, 'Arroz 1kg', 1290, 'S', 5, 'S', 1, 1, 10001);

INSERT INTO PRODUCTO (id_producto, nombre_producto, precio_unitario, origen_nacional, stock_minimo, activo, cod_marca, cod_categoria, cod_proveedor)
VALUES (101, 'Leche 1L', 850, 'S', 10, 'S', 2, 2, 10002);


INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (11, 'Efectivo');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (12, 'Tarjeta Débito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (13, 'Tarjeta Crédito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (14, 'Cheque');


INSERT INTO AFP (nom_afp) VALUES ('AFP Habitat');
INSERT INTO AFP (nom_afp) VALUES ('AFP Cuprum');
INSERT INTO AFP (nom_afp) VALUES ('AFP Provida');
INSERT INTO AFP (nom_afp) VALUES ('AFP PlanVital');


INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Fonasa');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Colmena');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Banmédica');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Cruz Blanca'); 


INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '1111111-1', 'Marcela', 'González', 'Pérez', TO_DATE('15-03-2022','DD-MM-YYYY'), 950000, 80000, 'S', 'Administrativo', null, 2050, 210);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '2222222-2', 'José', 'Muñoz', 'Ramírez', TO_DATE('10-07-2021','DD-MM-YYYY'), 900000, 75000, 'S', 'Administrativo', null, 2060, 216);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '3333333-3', 'Verónica', 'Soto', 'Alarcón', TO_DATE('05-01-2020','DD-MM-YYYY'), 880000, 70000, 'S', 'Vendedor', 750, 2060, 228);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '4444444-4', 'Luis', 'Reyes', 'Fuentes', TO_DATE('01-04-2023','DD-MM-YYYY'), 560000, null, 'S', 'Vendedor', 750, 2070, 228);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '5555555-5', 'Claudia', 'Fernández', 'Lagos', TO_DATE('15-04-2023','DD-MM-YYYY'), 600000, null, 'S', 'Vendedor', 753, 2070, 216);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '6666666-6', 'Carlos', 'Navarro', 'Vega', TO_DATE('01-05-2023','DD-MM-YYYY'), 610000, null, 'S', 'Administrativo', 753, 2060, 210);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '7777777-7', 'Javiera', 'Pino', 'Rojas', TO_DATE('10-05-2023','DD-MM-YYYY'), 650000, null, 'S', 'Administrativo', 750, 2050, 210);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '8888888-8', 'Diego', 'Mella', 'Contreras', TO_DATE('12-05-2023','DD-MM-YYYY'), 620000, null, 'S', 'Vendedor', 750,2060, 216);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '9999999-9', 'Fernanda', 'Salas', 'Herrera', TO_DATE('18-05-2023','DD-MM-YYYY'), 570000, null, 'S', 'Vendedor', 753, 2070, 228);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '10101010-0', 'Tomás', 'Vidal', 'Espinoza', TO_DATE('01-06-2023','DD-MM-YYYY'), 530000, null, 'S', 'Vendedor', null, 2050, 222);


INSERT INTO VENDEDOR (id_empleado, comision_venta)
SELECT id_empleado, 0.12 FROM EMPLEADO WHERE rut_empleado = '3333333-3';


INSERT INTO VENTA (fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (TO_DATE('12-05-2023','DD-MM-YYYY'), 225990, 12,
        (SELECT cod_empleado FROM EMPLEADO WHERE rut_empleado = '8888888-8' AND ROWNUM = 1)); -- ejemplo si existe

INSERT INTO VENTA (fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (TO_DATE('23-10-2023','DD-MM-YYYY'), 524990, 13,
        (SELECT cod_empleado FROM EMPLEADO WHERE rut_empleado = '10101010-0' AND ROWNUM = 1));
        
INSERT INTO VENTA (fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (TO_DATE('17-02-2023','DD-MM-YYYY'), 466990, 11,
        (SELECT cod_empleado FROM EMPLEADO WHERE rut_empleado = '4444444-4' AND ROWNUM = 1));        



INSERT INTO DETALLE_VENTA (cod_venta, cod_producto, cantidad, precio_unitario)
VALUES (5050, 100, 2, 1290);

--------------------------------------------------------------------------------
-- Caso 4: RECUPERACION DE DATOS
--INFORME 1
-------------------------------------------------------------------------------

SELECT 
    e.id_empleado AS IDENTIFICADOR,
    e.nombre_empleado || ' ' || e.apellido_paterno || ' ' || e.apellido_materno AS "NOMBRE COMPLETO",
    e.sueldo_base AS SALARIO,
    e.bono_jefatura AS BONIFICACION,
    (e.sueldo_base + e.bono_jefatura) AS "SALARIO SIMULADO"
FROM EMPLEADO e
WHERE e.activo = 'S'
  AND e.bono_jefatura IS NOT NULL
ORDER BY (e.sueldo_base + e.bono_jefatura) DESC,
         e.apellido_paterno DESC;
         
-------------------------------------------------------------------------------
--INFORME 2
-------------------------------------------------------------------------------

SELECT 
    e.nombre_empleado || ' ' || e.apellido_paterno || ' ' || e.apellido_materno AS EMPLEADO,
    e.sueldo_base AS SUELDO,
    (e.sueldo_base * 0.08) AS "POSIBLE AUMENTO",
    (e.sueldo_base + (e.sueldo_base * 0.08)) AS "SALARIO SIMULADO"
FROM EMPLEADO e
WHERE e.sueldo_base BETWEEN 550000 AND 800000
ORDER BY e.sueldo_base ASC;


--------------------------------------------------------------------------------
-- COMMIT FINAL.
-------------------------------------------------------------------------------
COMMIT;
