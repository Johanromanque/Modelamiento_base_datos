/* ==========================================================
   1) LIMPIEZA INICIAL
   Buenas prácticas: antes de crear tablas/objetos, se eliminan
   los existentes para evitar errores de "ya existe".
   - DROP TABLE ... CASCADE CONSTRAINTS: elimina tabla + FKs.
   - DROP SEQUENCE: elimina un generador de secuencias.
   ==========================================================*/

-- Elimino las tablas si ya existen
DROP TABLE COMPANIA       CASCADE CONSTRAINTS;
DROP TABLE REGION         CASCADE CONSTRAINTS;
DROP TABLE COMUNA         CASCADE CONSTRAINTS;
DROP TABLE ESTADO_CIVIL   CASCADE CONSTRAINTS;
DROP TABLE GENERO         CASCADE CONSTRAINTS;
DROP TABLE TITULO         CASCADE CONSTRAINTS;
DROP TABLE TITULACION     CASCADE CONSTRAINTS;
DROP TABLE IDIOMA         CASCADE CONSTRAINTS;
DROP TABLE DOMINIO        CASCADE CONSTRAINTS;
DROP TABLE PERSONAL       CASCADE CONSTRAINTS;

-- Elimino secuencias si ya existen
DROP SEQUENCE SEQ_COMPANIA;
DROP SEQUENCE SEQ_COMUNA;


/***************************************************************
   2) CREACIÓN DE TABLAS
   Se crean en orden lógico: primero "fuertes" (catálogos),
   luego las que dependen de ellas con claves foráneas.
***************************************************************/

-- 1) Tabla de REGIONES (con columna IDENTITY autogenerada)
CREATE TABLE REGION (
  id_region NUMBER(2) GENERATED BY DEFAULT ON NULL AS IDENTITY
             (START WITH 7 INCREMENT BY 2) PRIMARY KEY,
  nombre_region VARCHAR2(25) NOT NULL,
  CONSTRAINT REGION_UN_NOMBRE UNIQUE (nombre_region)
);

-- 2) Estado civil (tabla de catálogo simple)
CREATE TABLE ESTADO_CIVIL (
  id_estado_civil VARCHAR2(2) PRIMARY KEY,
  descripcion_estado VARCHAR2(25) NOT NULL
);

-- 3) Género (catálogo simple)
CREATE TABLE GENERO (
  id_genero VARCHAR2(3) PRIMARY KEY,
  descripcion_genero VARCHAR2(25) NOT NULL
);

-- 4) Títulos profesionales (catálogo)
CREATE TABLE TITULO (
  id_titulo VARCHAR2(3) PRIMARY KEY,
  descripcion_titulo VARCHAR2(60)
);

-- 5) Titulación (relación persona ↔ título)
CREATE TABLE TITULACION (
  cod_titulacion VARCHAR2(3) PRIMARY KEY,
  persona_rut    NUMBER(8),   -- FK a PERSONAL
  id_titulo      VARCHAR2(3), -- FK a TITULO
  fecha_titulacion DATE,
  CONSTRAINT TITULACION_FK_TITULO FOREIGN KEY (id_titulo) REFERENCES TITULO(id_titulo)
);

-- 6) Idiomas (tabla con IDENTITY que parte en 25, incremento 3)
CREATE TABLE IDIOMA (
  id_idioma NUMBER(3) GENERATED BY DEFAULT ON NULL AS IDENTITY
            (START WITH 25 INCREMENT BY 3) PRIMARY KEY,
  nombre_idioma VARCHAR2(30) NOT NULL
);

-- 7) Dominio de idioma por persona
CREATE TABLE DOMINIO (
  id_idioma_fk NUMBER (3),
  persona_rut  NUMBER(8),
  nivel        VARCHAR2(25),
  CONSTRAINT DOMINIO_PK PRIMARY KEY (id_idioma_fk, persona_rut),
  CONSTRAINT DOMINIO_FK_IDIOMA FOREIGN KEY (id_idioma_fk) REFERENCES IDIOMA(id_idioma)
  -- FK a PERSONAL se agrega después
);

-- 8) Comunas (usa secuencia para generar IDs)
CREATE TABLE COMUNA (
  id_comuna NUMBER (5) PRIMARY KEY,
  comuna_nombre VARCHAR2(25) NOT NULL,
  cod_region NUMBER (2),
  CONSTRAINT COMUNA_FK_REGION FOREIGN KEY (cod_region) REFERENCES REGION(id_region)
);

-- 9) Compañías (usa secuencia para id_empresa)
CREATE TABLE COMPANIA (
  id_empresa NUMBER (2) PRIMARY KEY,
  nombre_empresa VARCHAR2(25) NOT NULL,
  calle VARCHAR2(50) NOT NULL,
  numeracion VARCHAR2(5) NOT NULL,
  renta_promedio NUMBER(10),
  pct_aumento NUMBER(4,3) DEFAULT 0, -- Porcentaje de aumento
  cod_comuna NUMBER (5),
  cod_region NUMBER (2),
  CONSTRAINT COMPANIA_FK_COMUNA FOREIGN KEY (cod_comuna) REFERENCES COMUNA(id_comuna),
  CONSTRAINT COMPANIA_FK_REGION FOREIGN KEY (cod_region) REFERENCES REGION(id_region),
  CONSTRAINT COMPANIA_UN_NOMBRE UNIQUE (nombre_empresa)
);

-- 10) Personal (tabla central con múltiples FKs)
CREATE TABLE PERSONAL (
  rut_persona NUMBER (8) PRIMARY KEY,
  dv_persona VARCHAR2(1) NOT NULL,
  primer_nombre VARCHAR2(25) NOT NULL,
  segundo_nombre VARCHAR2(25),
  primer_apellido VARCHAR2(25) NOT NULL,
  segundo_apellido VARCHAR2(25) NOT NULL,
  fecha_nacimiento DATE NOT NULL,
  fecha_contratacion DATE NOT NULL,
  email VARCHAR2(100),
  calle VARCHAR2(50) NOT NULL,
  numeracion VARCHAR2(5) NOT NULL,
  sueldo NUMBER(5) NOT NULL,
  cod_comuna NUMBER (5),
  cod_region NUMBER (2),
  cod_genero VARCHAR2(3),
  cod_estado_civil VARCHAR2(2),
  cod_empresa NUMBER (2),
  encargado_rut NUMBER (8), -- FK a otra persona
  CONSTRAINT PERSONAL_FK_COMPANIA FOREIGN KEY (cod_empresa) REFERENCES COMPANIA(id_empresa),
  CONSTRAINT PERSONAL_FK_COMUNA FOREIGN KEY (cod_comuna) REFERENCES COMUNA(ID_comuna),
  CONSTRAINT PERSONAL_FK_REGION FOREIGN KEY (cod_region) REFERENCES REGION(id_region),
  CONSTRAINT PERSONAL_FK_GENERO FOREIGN KEY (cod_genero) REFERENCES GENERO(id_genero),
  CONSTRAINT PERSONAL_FK_ESTADO_CIVIL FOREIGN KEY (cod_estado_civil) REFERENCES ESTADO_CIVIL(id_estado_civil)
);

-- 11) Ajustes posteriores: ahora que PERSONAL existe, se completan FKs pendientes
ALTER TABLE TITULACION
  ADD CONSTRAINT TITULACION_FK_PERSONAL FOREIGN KEY (persona_rut) REFERENCES PERSONAL(rut_persona);

ALTER TABLE DOMINIO
  ADD CONSTRAINT DOMINIO_FK_PERSONAL FOREIGN KEY (persona_rut) REFERENCES PERSONAL(rut_persona);

ALTER TABLE PERSONAL
  ADD CONSTRAINT PERSONAL_PERSONAL_FK_ENCARGADO FOREIGN KEY (encargado_rut) REFERENCES PERSONAL(rut_persona);


/***************************************************************
   3) REGLAS DE NEGOCIO ADICIONALES (ALTER TABLE)
***************************************************************/

-- a) Email opcional pero único
ALTER TABLE PERSONAL
  ADD CONSTRAINT PERSONAL_UN_EMAIL UNIQUE (email);

-- b) DV válido: solo dígitos 0-9 o 'K'
ALTER TABLE PERSONAL
  ADD CONSTRAINT PERSONAL_CK_DV CHECK (dv_persona IN ('0','1','2','3','4','5','6','7','8','9','K'));

-- c) Sueldo mínimo de 450.000
ALTER TABLE PERSONAL
  ADD CONSTRAINT PERSONAL_CK_SUELDO CHECK (sueldo >= 450000);


/***************************************************************
   4) CREACIÓN DE SECUENCIAS
***************************************************************/

-- Secuencia para COMUNA
CREATE SEQUENCE SEQ_COMUNA
  START WITH 1101
  INCREMENT BY 6
  NOCACHE;

-- Secuencia para COMPANIA
CREATE SEQUENCE SEQ_COMPANIA
  START WITH 10
  INCREMENT BY 5
  NOCACHE;


/***************************************************************
   5) POBLADO DE DATOS DE PRUEBA
   Orden recomendado: REGION → COMUNA → COMPANIA → IDIOMA
***************************************************************/

-- Regiones (id_region se autogenera)
INSERT INTO REGION (nombre_region) VALUES ('ARICA Y PARINACOTA');
INSERT INTO REGION (nombre_region) VALUES ('METROPOLITANA');
INSERT INTO REGION (nombre_region) VALUES ('LA ARAUCANIA');

-- Comunas (usando secuencia SEQ_COMUNA)
INSERT INTO COMUNA (id_comuna, comuna_nombre, cod_region) VALUES (SEQ_COMUNA.NEXTVAL, 'ARICA', 7);
INSERT INTO COMUNA (id_comuna, comuna_nombre, cod_region) VALUES (SEQ_COMUNA.NEXTVAL, 'SANTIAGO', 9);
INSERT INTO COMUNA (id_comuna, comuna_nombre, cod_region) VALUES (SEQ_COMUNA.NEXTVAL, 'TEMUCO', 11);

-- Compañías (ejemplo con distintos porcentajes de aumento)
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'CCyRojas','Amapolas',506,1857000,0.500,1101,7);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'SenTTy','Los Alamos',3490,897000,0.025,1101,7);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'Praxia LTDA','Las Camelias',11098,2157000,0.035,1107,9);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'TIC spa','FLORES S.A.',4357,857000,NULL,1107,9);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'SANTANA LTDA','AVDA VIC. MACKENA',106,757000,0.015,1101,7);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'FLORES Y ASOCIADOS','PEDRO LATORRE',557,589000,0.015,1107,9);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'J.A. HOFFMAN','LATINA D.32',509,1857000,0.025,1113,11);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'CAGLIARI D.','ALAMEDA',206,1857000,NULL,1107,9);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'Rojas HNOS LTDA','SUCRE',106,957000,0.005,1113,11);
INSERT INTO COMPANIA VALUES (SEQ_COMPANIA.NEXTVAL,'FRIENDS P. S.A','SUECIA',506,857000,0.015,1113,11);

COMMIT;

-- Idiomas (identity autogenerado)
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Inglés');
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Chino');
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Alemán');
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Español');
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Francés');

COMMIT;


/***************************************************************
   6) CONSULTAS DE INFORME
***************************************************************/

-- INFORME 1: muestra nombre, dirección, renta y simulación con aumento
SELECT
  nombre_empresa AS "Nombre Empresa",
  calle || ' ' || numeracion AS "Dirección",
  renta_promedio AS "Renta Promedio",
  renta_promedio,
  renta_promedio * (1 + pct_aumento) AS "Simulación de Renta"
FROM COMPANIA
ORDER BY renta_promedio DESC, nombre_empresa ASC;

-- INFORME 2: aplica un +15% adicional al porcentaje registrado
SELECT
  id_empresa AS "ID Empresa",
  nombre_empresa AS "Nombre Empresa",
  renta_promedio AS "Renta Promedio Actual",
  pct_aumento + 0.15 AS "Pct Aumento  en 15%",
  (pct_aumento + 0.15) * renta_promedio AS "Renta Aumentada"
FROM COMPANIA
ORDER BY 3,1 DESC; -- ordena por la tercera columna sel SELECT (renta_promedio) en orden ascendente por defecto. 
                   -- luego por la primera columna (id_empresa) en orden ascentente.


